2025-04-30 11:13:47,857 - segment_embeddings - INFO - Starting segment_gemini_outputs.py
2025-04-30 11:13:47,857 - segment_embeddings - INFO - Arguments: image=data/mjolnir_gt.jpeg, output=segmentation_results
2025-04-30 11:13:47,858 - segment_embeddings - INFO - Created output directories in segmentation_results
2025-04-30 11:13:47,858 - segment_embeddings - INFO - Building SAM2 model...
2025-04-30 11:13:47,858 - segment_embeddings - INFO - Starting path: /Users/andrewdelacruz/e2e_sam2
2025-04-30 11:13:47,901 - segment_embeddings - INFO - Using MPS (Apple Silicon). Note that SAM2 might give different outputs on MPS.
2025-04-30 11:13:47,901 - segment_embeddings - INFO - Selected device: mps
2025-04-30 11:13:49,391 - segment_embeddings - INFO - SAM2 model built successfully in 1.53 seconds
2025-04-30 11:13:49,391 - segment_embeddings - INFO - Creating automatic mask generator...
2025-04-30 11:13:49,524 - segment_embeddings - INFO - Initializing embedding generator...
2025-04-30 11:13:49,524 - segment_embeddings - INFO - Using MPS (Apple Silicon). Note that SAM2 might give different outputs on MPS.
2025-04-30 11:13:49,524 - segment_embeddings - INFO - Selected device: mps
2025-04-30 11:13:51,208 - segment_embeddings - INFO - Loading image from data/mjolnir_gt.jpeg
2025-04-30 11:13:51,213 - segment_embeddings - INFO - Image loaded successfully: (316, 160, 3)
2025-04-30 11:13:51,215 - segment_embeddings - INFO - Generating masks...
2025-04-30 11:13:51,215 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 11:13:51,276 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 11:13:57,787 - root - INFO - Image embeddings computed.
2025-04-30 11:15:31,535 - segment_embeddings - INFO - Starting segment_gemini_outputs.py
2025-04-30 11:15:31,536 - segment_embeddings - INFO - Arguments: image=data/mjolnir_gt.jpeg, output=segmentation_results
2025-04-30 11:15:31,536 - segment_embeddings - INFO - Created output directories in segmentation_results
2025-04-30 11:15:31,536 - segment_embeddings - INFO - Building SAM2 model...
2025-04-30 11:15:31,536 - segment_embeddings - INFO - Starting path: /Users/andrewdelacruz/e2e_sam2
2025-04-30 11:15:31,559 - segment_embeddings - INFO - Using MPS (Apple Silicon). Note that SAM2 might give different outputs on MPS.
2025-04-30 11:15:31,559 - segment_embeddings - INFO - Selected device: mps
2025-04-30 11:15:32,960 - segment_embeddings - INFO - SAM2 model built successfully in 1.42 seconds
2025-04-30 11:15:32,961 - segment_embeddings - INFO - Creating automatic mask generator...
2025-04-30 11:15:33,071 - segment_embeddings - INFO - Initializing embedding generator...
2025-04-30 11:15:33,072 - segment_embeddings - INFO - Using MPS (Apple Silicon). Note that SAM2 might give different outputs on MPS.
2025-04-30 11:15:33,072 - segment_embeddings - INFO - Selected device: mps
2025-04-30 11:15:34,830 - segment_embeddings - INFO - Loading image from data/mjolnir_gt.jpeg
2025-04-30 11:15:34,837 - segment_embeddings - INFO - Image loaded successfully: (316, 160, 3)
2025-04-30 11:15:34,838 - segment_embeddings - INFO - Generating masks...
2025-04-30 11:15:34,839 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 11:15:34,900 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 11:15:41,803 - root - INFO - Image embeddings computed.
2025-04-30 11:19:43,160 - segment_embeddings - INFO - Starting segment_gemini_outputs.py
2025-04-30 11:19:43,161 - segment_embeddings - INFO - Arguments: image=data/mjolnir_gt.jpeg, output=segmentation_results, max_segments=None, models=both
2025-04-30 11:19:43,161 - segment_embeddings - INFO - Created output directories in segmentation_results
2025-04-30 11:19:43,161 - segment_embeddings - INFO - Building SAM2 model...
2025-04-30 11:19:43,161 - segment_embeddings - INFO - Starting path: /Users/andrewdelacruz/e2e_sam2
2025-04-30 11:19:43,185 - segment_embeddings - INFO - Using MPS (Apple Silicon). Note that SAM2 might give different outputs on MPS.
2025-04-30 11:19:43,185 - segment_embeddings - INFO - Selected device: mps
2025-04-30 11:19:44,614 - segment_embeddings - INFO - SAM2 model built successfully in 1.45 seconds
2025-04-30 11:19:44,614 - segment_embeddings - INFO - Creating automatic mask generator...
2025-04-30 11:19:44,756 - segment_embeddings - INFO - Initializing embedding generator with models: ['vit', 'resnet50']
2025-04-30 11:19:44,756 - segment_embeddings - INFO - Using MPS (Apple Silicon). Note that SAM2 might give different outputs on MPS.
2025-04-30 11:19:44,756 - segment_embeddings - INFO - Selected device: mps
2025-04-30 11:19:46,391 - segment_embeddings - INFO - Loading image from data/mjolnir_gt.jpeg
2025-04-30 11:19:46,401 - segment_embeddings - INFO - Image loaded successfully: (316, 160, 3)
2025-04-30 11:19:46,403 - segment_embeddings - INFO - Generating masks...
2025-04-30 11:19:46,403 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 11:19:46,465 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 11:19:51,426 - root - INFO - Image embeddings computed.
2025-04-30 11:23:42,436 - segment_embeddings - INFO - Starting segment_gemini_outputs.py
2025-04-30 11:23:42,437 - segment_embeddings - INFO - Arguments: image=data/mjolnir_gt.jpeg, output=segmentation_results, max_segments=None, models=both
2025-04-30 11:23:42,437 - segment_embeddings - INFO - Created output directories in segmentation_results
2025-04-30 11:23:42,437 - segment_embeddings - INFO - Building SAM2 model...
2025-04-30 11:23:42,437 - segment_embeddings - INFO - Starting path: /Users/andrewdelacruz/e2e_sam2
2025-04-30 11:23:42,460 - segment_embeddings - INFO - Using MPS (Apple Silicon). Note that SAM2 might give different outputs on MPS.
2025-04-30 11:23:42,460 - segment_embeddings - INFO - Selected device: mps
2025-04-30 11:23:43,922 - segment_embeddings - INFO - SAM2 model built successfully in 1.48 seconds
2025-04-30 11:23:43,922 - segment_embeddings - INFO - Creating automatic mask generator...
2025-04-30 11:23:44,034 - segment_embeddings - INFO - Initializing embedding generator with models: ['vit', 'resnet50']
2025-04-30 11:23:44,035 - segment_embeddings - INFO - Using MPS (Apple Silicon). Note that SAM2 might give different outputs on MPS.
2025-04-30 11:23:44,035 - segment_embeddings - INFO - Selected device: mps
2025-04-30 11:23:45,810 - segment_embeddings - INFO - Loading image from data/mjolnir_gt.jpeg
2025-04-30 11:23:45,816 - segment_embeddings - INFO - Image loaded successfully: (316, 160, 3)
2025-04-30 11:23:45,818 - segment_embeddings - INFO - Generating masks...
2025-04-30 11:23:45,818 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 11:23:45,882 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 11:23:52,783 - root - INFO - Image embeddings computed.
2025-04-30 11:25:32,061 - segment_embeddings - INFO - Starting segment_gemini_outputs.py
2025-04-30 11:25:32,061 - segment_embeddings - INFO - Arguments: image=data/mjolnir_gt.jpeg, output=segmentation_results, max_segments=None, models=both
2025-04-30 11:25:32,061 - segment_embeddings - INFO - Created output directories in segmentation_results
2025-04-30 11:25:32,061 - segment_embeddings - INFO - Building SAM2 model...
2025-04-30 11:25:32,062 - segment_embeddings - INFO - Starting path: /Users/andrewdelacruz/e2e_sam2
2025-04-30 11:25:32,139 - segment_embeddings - INFO - Using MPS (Apple Silicon). Note that SAM2 might give different outputs on MPS.
2025-04-30 11:25:32,139 - segment_embeddings - INFO - Selected device: mps
2025-04-30 11:25:35,608 - segment_embeddings - INFO - SAM2 model built successfully in 3.54 seconds
2025-04-30 11:25:35,615 - segment_embeddings - INFO - Creating automatic mask generator...
2025-04-30 11:25:36,092 - segment_embeddings - INFO - Initializing embedding generator with models: ['vit', 'resnet50']
2025-04-30 11:25:36,097 - segment_embeddings - INFO - Using MPS (Apple Silicon). Note that SAM2 might give different outputs on MPS.
2025-04-30 11:25:36,097 - segment_embeddings - INFO - Selected device: mps
2025-04-30 11:25:44,753 - segment_embeddings - INFO - Loading image from data/mjolnir_gt.jpeg
2025-04-30 11:25:44,860 - segment_embeddings - INFO - Image loaded successfully: (316, 160, 3)
2025-04-30 11:25:44,893 - segment_embeddings - INFO - Generating masks...
2025-04-30 11:25:44,905 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 11:25:45,145 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:33:06,417 - segment_embeddings - INFO - Starting segment_gemini_outputs.py
2025-04-30 18:33:06,418 - segment_embeddings - INFO - Arguments: image=data/mjolnir_gt.jpeg, output=segmentation_results, max_segments=None, models=both
2025-04-30 18:33:06,419 - segment_embeddings - INFO - Created output directories in segmentation_results
2025-04-30 18:33:06,419 - segment_embeddings - INFO - Building SAM2 model...
2025-04-30 18:33:06,419 - segment_embeddings - INFO - Starting path: /home/ubuntu/code/drew/e2e_sam2
2025-04-30 18:33:06,591 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 18:33:06,592 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 18:33:09,168 - segment_embeddings - INFO - SAM2 model built successfully in 2.75 seconds
2025-04-30 18:33:09,168 - segment_embeddings - INFO - Creating automatic mask generator...
2025-04-30 18:33:09,306 - segment_embeddings - INFO - Initializing embedding generator with models: ['vit', 'resnet50']
2025-04-30 18:33:09,306 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 18:33:09,306 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 18:33:09,851 - huggingface_hub.file_download - WARNING - Xet Storage is enabled for this repo, but the 'hf_xet' package is not installed. Falling back to regular HTTP download. For better performance, install the package with: `pip install huggingface_hub[hf_xet]` or `pip install hf_xet`
2025-04-30 18:33:12,119 - segment_embeddings - INFO - Loading image from data/mjolnir_gt.jpeg
2025-04-30 18:33:12,119 - segment_embeddings - INFO - Image loaded successfully: (316, 160, 3)
2025-04-30 18:33:12,120 - segment_embeddings - INFO - Generating masks...
2025-04-30 18:33:12,120 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:33:12,198 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:33:12,959 - root - INFO - Image embeddings computed.
2025-04-30 18:33:16,592 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:33:16,617 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:33:16,639 - root - INFO - Image embeddings computed.
2025-04-30 18:33:18,049 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:33:18,055 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:33:18,077 - root - INFO - Image embeddings computed.
2025-04-30 18:33:19,484 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:33:19,490 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:33:19,512 - root - INFO - Image embeddings computed.
2025-04-30 18:33:20,919 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:33:20,925 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:33:20,947 - root - INFO - Image embeddings computed.
2025-04-30 18:33:22,358 - segment_embeddings - ERROR - Error: too many indices for tensor of dimension 1
Traceback (most recent call last):
  File "/home/ubuntu/code/drew/e2e_sam2/e2e_pipeline_v2/experiments/segment_gemini_outputs.py", line 405, in <module>
    results = modified_process_image()
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/e2e_pipeline_v2/experiments/segment_gemini_outputs.py", line 264, in modified_process_image
    masks = mask_generator.generate(image)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 196, in generate
    mask_data = self._generate_masks(image)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 239, in _generate_masks
    scores = 1 / box_area(data["crop_boxes"])
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torchvision/ops/boxes.py", line 251, in box_area
    return (boxes[:, 2] - boxes[:, 0]) * (boxes[:, 3] - boxes[:, 1])
            ~~~~~^^^^^^
IndexError: too many indices for tensor of dimension 1
2025-04-30 18:36:24,673 - segment_embeddings - INFO - Starting segment_gemini_outputs.py
2025-04-30 18:36:24,674 - segment_embeddings - INFO - Arguments: image=data/mjolnir_gt.jpeg, output=segmentation_results, max_segments=None, models=both
2025-04-30 18:36:24,674 - segment_embeddings - INFO - Created output directories in segmentation_results
2025-04-30 18:36:24,674 - segment_embeddings - INFO - Building SAM2 model...
2025-04-30 18:36:24,674 - segment_embeddings - INFO - Starting path: /home/ubuntu/code/drew/e2e_sam2
2025-04-30 18:36:24,811 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 18:36:24,812 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 18:36:27,337 - segment_embeddings - INFO - SAM2 model built successfully in 2.66 seconds
2025-04-30 18:36:27,338 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 18:36:27,338 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 18:36:27,338 - segment_embeddings - INFO - Creating automatic mask generator for cuda...
2025-04-30 18:36:27,338 - segment_embeddings - INFO - Using CUDA-specific settings for mask generator
2025-04-30 18:36:27,476 - segment_embeddings - INFO - Initializing embedding generator with models: ['vit', 'resnet50']
2025-04-30 18:36:28,507 - segment_embeddings - INFO - Loading image from data/mjolnir_gt.jpeg
2025-04-30 18:36:28,508 - segment_embeddings - INFO - Image loaded successfully: (316, 160, 3)
2025-04-30 18:36:28,508 - segment_embeddings - INFO - Generating masks...
2025-04-30 18:36:28,508 - segment_embeddings - INFO - Generating masks on cuda device...
2025-04-30 18:36:28,508 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:36:28,587 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:36:29,249 - root - INFO - Image embeddings computed.
2025-04-30 18:36:32,847 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:36:32,877 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:36:32,899 - root - INFO - Image embeddings computed.
2025-04-30 18:36:34,315 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:36:34,323 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:36:34,345 - root - INFO - Image embeddings computed.
2025-04-30 18:36:35,749 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:36:35,757 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:36:35,779 - root - INFO - Image embeddings computed.
2025-04-30 18:36:37,188 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:36:37,197 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:36:37,218 - root - INFO - Image embeddings computed.
2025-04-30 18:36:38,622 - segment_embeddings - WARNING - Dimension error in mask generation: too many indices for tensor of dimension 1
2025-04-30 18:36:38,622 - segment_embeddings - INFO - Trying fallback approach...
2025-04-30 18:36:38,623 - segment_embeddings - ERROR - Failed to generate masks: Fallback approach failed: Image format not supported
2025-04-30 18:39:29,020 - segment_embeddings - INFO - Starting segment_gemini_outputs.py
2025-04-30 18:39:29,021 - segment_embeddings - INFO - Arguments: image=data/mjolnir_gt.jpeg, output=segmentation_results, max_segments=None, models=both
2025-04-30 18:39:29,021 - segment_embeddings - INFO - Created output directories in segmentation_results
2025-04-30 18:39:29,021 - segment_embeddings - INFO - Building SAM2 model...
2025-04-30 18:39:29,021 - segment_embeddings - INFO - Starting path: /home/ubuntu/code/drew/e2e_sam2
2025-04-30 18:39:29,158 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 18:39:29,182 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 18:39:29,182 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 18:39:29,182 - segment_embeddings - INFO - CUDA Memory Allocated: 0.00 MB
2025-04-30 18:39:29,182 - segment_embeddings - INFO - CUDA Memory Reserved: 0.00 MB
2025-04-30 18:39:29,182 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 18:39:29,183 - segment_embeddings - DEBUG - Loading SAM2 model configuration from config file
2025-04-30 18:39:29,183 - segment_embeddings - ERROR - Checkpoint file not found: checkpoints/sam2.1_hiera_large.pt
2025-04-30 18:39:29,183 - segment_embeddings - ERROR - Failed to initialize SAM2 model: Checkpoint file not found: checkpoints/sam2.1_hiera_large.pt
2025-04-30 18:39:29,183 - segment_embeddings - ERROR - Traceback (most recent call last):
  File "/home/ubuntu/code/drew/e2e_sam2/e2e_pipeline_v2/experiments/segment_gemini_outputs.py", line 105, in initialize_sam2
    raise FileNotFoundError(f"Checkpoint file not found: {checkpoint_path}")
FileNotFoundError: Checkpoint file not found: checkpoints/sam2.1_hiera_large.pt

2025-04-30 18:39:29,183 - segment_embeddings - ERROR - Error: Checkpoint file not found: checkpoints/sam2.1_hiera_large.pt
Traceback (most recent call last):
  File "/home/ubuntu/code/drew/e2e_sam2/e2e_pipeline_v2/experiments/segment_gemini_outputs.py", line 613, in <module>
    results = modified_process_image()
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/e2e_pipeline_v2/experiments/segment_gemini_outputs.py", line 445, in modified_process_image
    sam2 = initialize_sam2()
           ^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/e2e_pipeline_v2/experiments/segment_gemini_outputs.py", line 105, in initialize_sam2
    raise FileNotFoundError(f"Checkpoint file not found: {checkpoint_path}")
FileNotFoundError: Checkpoint file not found: checkpoints/sam2.1_hiera_large.pt
2025-04-30 18:40:54,837 - segment_embeddings - INFO - Starting segment_gemini_outputs.py
2025-04-30 18:40:54,838 - segment_embeddings - INFO - Arguments: image=data/mjolnir_gt.jpeg, output=segmentation_results, max_segments=None, models=both
2025-04-30 18:40:54,838 - segment_embeddings - INFO - Created output directories in segmentation_results
2025-04-30 18:40:54,838 - segment_embeddings - INFO - Building SAM2 model...
2025-04-30 18:40:54,838 - segment_embeddings - INFO - Starting path: /home/ubuntu/code/drew/e2e_sam2
2025-04-30 18:40:54,967 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 18:40:54,990 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 18:40:54,990 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 18:40:54,991 - segment_embeddings - INFO - CUDA Memory Allocated: 0.00 MB
2025-04-30 18:40:54,991 - segment_embeddings - INFO - CUDA Memory Reserved: 0.00 MB
2025-04-30 18:40:54,991 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 18:40:54,991 - segment_embeddings - DEBUG - Loading SAM2 model configuration from config file
2025-04-30 18:40:54,991 - segment_embeddings - DEBUG - Building SAM2 model with config: configs/sam2.1/sam2.1_hiera_l.yaml, checkpoint: checkpoints/sam2.1_hiera_large.pt, device: cuda
2025-04-30 18:40:57,480 - segment_embeddings - DEBUG - SAM2 model built successfully
2025-04-30 18:40:57,480 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 18:40:57,480 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 18:40:57,480 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 18:40:57,480 - segment_embeddings - INFO - CUDA Memory Allocated: 1000.91 MB
2025-04-30 18:40:57,480 - segment_embeddings - INFO - CUDA Memory Reserved: 1052.00 MB
2025-04-30 18:40:57,480 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 18:40:57,481 - segment_embeddings - DEBUG - CUDA Memory Allocated: 1000.91 MB
2025-04-30 18:40:57,481 - segment_embeddings - DEBUG - CUDA Memory Reserved: 1052.00 MB
2025-04-30 18:40:57,614 - segment_embeddings - DEBUG - After GC - CUDA Memory Allocated: 1000.91 MB
2025-04-30 18:40:57,614 - segment_embeddings - INFO - SAM2 model built successfully in 2.78 seconds
2025-04-30 18:40:57,614 - segment_embeddings - DEBUG - SAM2 model type: <class 'sam2.modeling.sam2_base.SAM2Base'>
2025-04-30 18:40:57,614 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 18:40:57,614 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 18:40:57,614 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 18:40:57,614 - segment_embeddings - INFO - CUDA Memory Allocated: 1000.91 MB
2025-04-30 18:40:57,615 - segment_embeddings - INFO - CUDA Memory Reserved: 1052.00 MB
2025-04-30 18:40:57,615 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 18:40:57,615 - segment_embeddings - INFO - Creating automatic mask generator for cuda...
2025-04-30 18:40:57,615 - segment_embeddings - INFO - Using CUDA-specific settings for mask generator
2025-04-30 18:40:57,615 - segment_embeddings - DEBUG - Parameters: points_per_side=32, pred_iou_thresh=0.86, stability_score_thresh=0.92
2025-04-30 18:40:57,754 - segment_embeddings - DEBUG - Mask generator created successfully: <class 'sam2.automatic_mask_generator.SAM2AutomaticMaskGenerator'>
2025-04-30 18:40:57,754 - segment_embeddings - INFO - Initializing embedding generator with models: ['vit', 'resnet50']
2025-04-30 18:40:57,755 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-04-30 18:40:57,879 - urllib3.connectionpool - DEBUG - https://huggingface.co:443 "HEAD /google/vit-base-patch16-224/resolve/main/preprocessor_config.json HTTP/1.1" 200 0
2025-04-30 18:40:58,100 - urllib3.connectionpool - DEBUG - https://huggingface.co:443 "HEAD /google/vit-base-patch16-224/resolve/main/config.json HTTP/1.1" 200 0
2025-04-30 18:40:58,181 - urllib3.connectionpool - DEBUG - https://huggingface.co:443 "HEAD /google/vit-base-patch16-224/resolve/main/config.json HTTP/1.1" 200 0
2025-04-30 18:40:58,851 - segment_embeddings - INFO - Loading image from data/mjolnir_gt.jpeg
2025-04-30 18:40:58,852 - segment_embeddings - DEBUG - Image file size: 5.97 KB
2025-04-30 18:40:58,852 - segment_embeddings - INFO - Image loaded successfully: (316, 160, 3), dtype: uint8
2025-04-30 18:40:58,852 - segment_embeddings - DEBUG - Converting image from BGR to RGB
2025-04-30 18:40:58,852 - segment_embeddings - DEBUG - Image pixel range - Min: 0, Max: 255, Mean: 215.79
2025-04-30 18:40:58,852 - segment_embeddings - INFO - Generating masks...
2025-04-30 18:40:58,852 - segment_embeddings - INFO - Generating masks on cuda device...
2025-04-30 18:40:58,852 - segment_embeddings - DEBUG - Image type: <class 'numpy.ndarray'>, Shape: (316, 160, 3), dtype: uint8
2025-04-30 18:40:58,853 - segment_embeddings - DEBUG - Image is numpy array, Min: 0, Max: 255, Mean: 215.79
2025-04-30 18:40:58,853 - segment_embeddings - DEBUG - Attempting standard mask generation approach
2025-04-30 18:40:58,853 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:40:58,932 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:40:59,680 - root - INFO - Image embeddings computed.
2025-04-30 18:41:03,319 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:41:03,344 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:41:03,366 - root - INFO - Image embeddings computed.
2025-04-30 18:41:04,778 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:41:04,784 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:41:04,806 - root - INFO - Image embeddings computed.
2025-04-30 18:41:06,213 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:41:06,219 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:41:06,241 - root - INFO - Image embeddings computed.
2025-04-30 18:41:07,654 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:41:07,660 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:41:07,681 - root - INFO - Image embeddings computed.
2025-04-30 18:41:09,087 - segment_embeddings - WARNING - IndexError in mask generation: too many indices for tensor of dimension 1
2025-04-30 18:41:09,088 - segment_embeddings - DEBUG - Error details: Traceback (most recent call last):
  File "/home/ubuntu/code/drew/e2e_sam2/e2e_pipeline_v2/experiments/segment_gemini_outputs.py", line 191, in safe_generate_masks
    masks = mask_generator.generate(image)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 196, in generate
    mask_data = self._generate_masks(image)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 239, in _generate_masks
    scores = 1 / box_area(data["crop_boxes"])
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torchvision/ops/boxes.py", line 251, in box_area
    return (boxes[:, 2] - boxes[:, 0]) * (boxes[:, 3] - boxes[:, 1])
            ~~~~~^^^^^^
IndexError: too many indices for tensor of dimension 1

2025-04-30 18:41:09,088 - segment_embeddings - WARNING - Dimension error in mask generation: too many indices for tensor of dimension 1
2025-04-30 18:41:09,088 - segment_embeddings - INFO - Trying fallback approach...
2025-04-30 18:41:09,088 - segment_embeddings - DEBUG - Converting numpy array to tensor. Original shape: (316, 160, 3)
2025-04-30 18:41:09,088 - segment_embeddings - DEBUG - Image is in HWC format, converting to BCHW
2025-04-30 18:41:09,088 - segment_embeddings - DEBUG - Created tensor with shape: torch.Size([1, 3, 316, 160]), dtype: torch.uint8
2025-04-30 18:41:09,088 - segment_embeddings - DEBUG - Moved tensor to cuda
2025-04-30 18:41:09,088 - segment_embeddings - DEBUG - Tensor device: cuda:0, requires_grad: False
2025-04-30 18:41:09,088 - segment_embeddings - DEBUG - Attempting mask generation with tensor
2025-04-30 18:41:09,089 - segment_embeddings - ERROR - Fallback approach failed: Image format not supported
2025-04-30 18:41:09,089 - segment_embeddings - DEBUG - Fallback error details: Traceback (most recent call last):
  File "/home/ubuntu/code/drew/e2e_sam2/e2e_pipeline_v2/experiments/segment_gemini_outputs.py", line 191, in safe_generate_masks
    masks = mask_generator.generate(image)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 196, in generate
    mask_data = self._generate_masks(image)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 239, in _generate_masks
    scores = 1 / box_area(data["crop_boxes"])
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torchvision/ops/boxes.py", line 251, in box_area
    return (boxes[:, 2] - boxes[:, 0]) * (boxes[:, 3] - boxes[:, 1])
            ~~~~~^^^^^^
IndexError: too many indices for tensor of dimension 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ubuntu/code/drew/e2e_sam2/e2e_pipeline_v2/experiments/segment_gemini_outputs.py", line 228, in safe_generate_masks
    masks = mask_generator.generate(image_tensor)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 196, in generate
    mask_data = self._generate_masks(image)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 233, in _generate_masks
    crop_data = self._process_crop(image, crop_box, layer_idx, orig_size)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 262, in _process_crop
    self.predictor.set_image(cropped_im)
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/sam2_image_predictor.py", line 108, in set_image
    raise NotImplementedError("Image format not supported")
NotImplementedError: Image format not supported

2025-04-30 18:41:09,090 - segment_embeddings - ERROR - Failed to generate masks: Fallback approach failed: Image format not supported
2025-04-30 18:46:46,400 - segment_embeddings - INFO - Starting segment_gemini_outputs.py
2025-04-30 18:46:46,401 - segment_embeddings - INFO - Arguments: image=data/mjolnir_gt.jpeg, output=segmentation_results, max_segments=2, models=both
2025-04-30 18:46:46,401 - segment_embeddings - INFO - Created output directories in segmentation_results
2025-04-30 18:46:46,401 - segment_embeddings - INFO - Building SAM2 model...
2025-04-30 18:46:46,401 - segment_embeddings - INFO - Starting path: /home/ubuntu/code/drew/e2e_sam2
2025-04-30 18:46:46,538 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 18:46:46,561 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 18:46:46,561 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 18:46:46,562 - segment_embeddings - INFO - CUDA Memory Allocated: 0.00 MB
2025-04-30 18:46:46,562 - segment_embeddings - INFO - CUDA Memory Reserved: 0.00 MB
2025-04-30 18:46:46,562 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 18:46:46,562 - segment_embeddings - DEBUG - Loading SAM2 model configuration from config file
2025-04-30 18:46:46,562 - segment_embeddings - DEBUG - Building SAM2 model with config: configs/sam2.1/sam2.1_hiera_l.yaml, checkpoint: checkpoints/sam2.1_hiera_large.pt, device: cuda
2025-04-30 18:46:49,056 - segment_embeddings - DEBUG - SAM2 model built successfully
2025-04-30 18:46:49,056 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 18:46:49,056 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 18:46:49,056 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 18:46:49,056 - segment_embeddings - INFO - CUDA Memory Allocated: 1000.91 MB
2025-04-30 18:46:49,056 - segment_embeddings - INFO - CUDA Memory Reserved: 1052.00 MB
2025-04-30 18:46:49,056 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 18:46:49,057 - segment_embeddings - DEBUG - CUDA Memory Allocated: 1000.91 MB
2025-04-30 18:46:49,057 - segment_embeddings - DEBUG - CUDA Memory Reserved: 1052.00 MB
2025-04-30 18:46:49,186 - segment_embeddings - DEBUG - After GC - CUDA Memory Allocated: 1000.91 MB
2025-04-30 18:46:49,186 - segment_embeddings - INFO - SAM2 model built successfully in 2.78 seconds
2025-04-30 18:46:49,186 - segment_embeddings - DEBUG - SAM2 model type: <class 'sam2.modeling.sam2_base.SAM2Base'>
2025-04-30 18:46:49,186 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 18:46:49,186 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 18:46:49,186 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 18:46:49,187 - segment_embeddings - INFO - CUDA Memory Allocated: 1000.91 MB
2025-04-30 18:46:49,187 - segment_embeddings - INFO - CUDA Memory Reserved: 1052.00 MB
2025-04-30 18:46:49,187 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 18:46:49,187 - segment_embeddings - INFO - Creating automatic mask generator for cuda...
2025-04-30 18:46:49,187 - segment_embeddings - INFO - Using CUDA-specific settings for mask generator
2025-04-30 18:46:49,187 - segment_embeddings - DEBUG - Parameters: points_per_side=32, pred_iou_thresh=0.86, stability_score_thresh=0.92
2025-04-30 18:46:49,326 - segment_embeddings - DEBUG - Mask generator created successfully: <class 'sam2.automatic_mask_generator.SAM2AutomaticMaskGenerator'>
2025-04-30 18:46:49,326 - segment_embeddings - INFO - Skipping embedding generator initialization as requested
2025-04-30 18:46:49,326 - segment_embeddings - INFO - Loading image from data/mjolnir_gt.jpeg
2025-04-30 18:46:49,327 - segment_embeddings - DEBUG - Image file size: 5.97 KB
2025-04-30 18:46:49,327 - segment_embeddings - INFO - Image loaded successfully: (316, 160, 3), dtype: uint8
2025-04-30 18:46:49,327 - segment_embeddings - DEBUG - Converting image from BGR to RGB
2025-04-30 18:46:49,327 - segment_embeddings - DEBUG - Image pixel range - Min: 0, Max: 255, Mean: 215.79
2025-04-30 18:46:49,327 - segment_embeddings - INFO - Generating masks...
2025-04-30 18:46:49,327 - segment_embeddings - INFO - Generating masks on cuda device...
2025-04-30 18:46:49,327 - segment_embeddings - DEBUG - Image type: <class 'numpy.ndarray'>, Shape: (316, 160, 3), dtype: uint8
2025-04-30 18:46:49,328 - segment_embeddings - DEBUG - Image is numpy array, Min: 0, Max: 255, Mean: 215.79
2025-04-30 18:46:49,328 - segment_embeddings - DEBUG - Attempting standard mask generation approach
2025-04-30 18:46:49,328 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:46:49,407 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:46:50,119 - root - INFO - Image embeddings computed.
2025-04-30 18:46:53,751 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:46:53,779 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:46:53,801 - root - INFO - Image embeddings computed.
2025-04-30 18:46:55,210 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:46:55,218 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:46:55,239 - root - INFO - Image embeddings computed.
2025-04-30 18:46:56,647 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:46:56,655 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:46:56,676 - root - INFO - Image embeddings computed.
2025-04-30 18:46:58,084 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:46:58,093 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:46:58,114 - root - INFO - Image embeddings computed.
2025-04-30 18:46:59,521 - segment_embeddings - WARNING - IndexError in mask generation: too many indices for tensor of dimension 1
2025-04-30 18:46:59,522 - segment_embeddings - DEBUG - Error details: Traceback (most recent call last):
  File "/home/ubuntu/code/drew/e2e_sam2/e2e_pipeline_v2/experiments/segment_gemini_outputs.py", line 191, in safe_generate_masks
    masks = mask_generator.generate(image)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 196, in generate
    mask_data = self._generate_masks(image)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 239, in _generate_masks
    scores = 1 / box_area(data["crop_boxes"])
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torchvision/ops/boxes.py", line 251, in box_area
    return (boxes[:, 2] - boxes[:, 0]) * (boxes[:, 3] - boxes[:, 1])
            ~~~~~^^^^^^
IndexError: too many indices for tensor of dimension 1

2025-04-30 18:46:59,523 - segment_embeddings - WARNING - Dimension error in mask generation: too many indices for tensor of dimension 1
2025-04-30 18:46:59,523 - segment_embeddings - INFO - Trying fallback approach...
2025-04-30 18:46:59,523 - segment_embeddings - DEBUG - Converting numpy array to tensor. Original shape: (316, 160, 3)
2025-04-30 18:46:59,523 - segment_embeddings - DEBUG - Image is in HWC format, converting to BCHW
2025-04-30 18:46:59,523 - segment_embeddings - DEBUG - Created tensor with shape: torch.Size([1, 3, 316, 160]), dtype: torch.uint8
2025-04-30 18:46:59,523 - segment_embeddings - DEBUG - Moved tensor to cuda
2025-04-30 18:46:59,523 - segment_embeddings - DEBUG - Tensor device: cuda:0, requires_grad: False
2025-04-30 18:46:59,523 - segment_embeddings - DEBUG - Attempting mask generation with tensor
2025-04-30 18:46:59,523 - segment_embeddings - ERROR - Fallback approach failed: Image format not supported
2025-04-30 18:46:59,524 - segment_embeddings - DEBUG - Fallback error details: Traceback (most recent call last):
  File "/home/ubuntu/code/drew/e2e_sam2/e2e_pipeline_v2/experiments/segment_gemini_outputs.py", line 191, in safe_generate_masks
    masks = mask_generator.generate(image)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 196, in generate
    mask_data = self._generate_masks(image)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 239, in _generate_masks
    scores = 1 / box_area(data["crop_boxes"])
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torchvision/ops/boxes.py", line 251, in box_area
    return (boxes[:, 2] - boxes[:, 0]) * (boxes[:, 3] - boxes[:, 1])
            ~~~~~^^^^^^
IndexError: too many indices for tensor of dimension 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ubuntu/code/drew/e2e_sam2/e2e_pipeline_v2/experiments/segment_gemini_outputs.py", line 228, in safe_generate_masks
    masks = mask_generator.generate(image_tensor)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 196, in generate
    mask_data = self._generate_masks(image)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 233, in _generate_masks
    crop_data = self._process_crop(image, crop_box, layer_idx, orig_size)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 262, in _process_crop
    self.predictor.set_image(cropped_im)
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/sam2_image_predictor.py", line 108, in set_image
    raise NotImplementedError("Image format not supported")
NotImplementedError: Image format not supported

2025-04-30 18:46:59,524 - segment_embeddings - ERROR - Failed to generate masks: Fallback approach failed: Image format not supported
2025-04-30 18:48:59,813 - segment_embeddings - INFO - Starting segment_gemini_outputs.py
2025-04-30 18:48:59,814 - segment_embeddings - INFO - Arguments: image=data/mjolnir_gt.jpeg, output=segmentation_results, max_segments=2, models=both
2025-04-30 18:48:59,814 - segment_embeddings - INFO - Created output directories in segmentation_results
2025-04-30 18:48:59,814 - segment_embeddings - INFO - Building SAM2 model...
2025-04-30 18:48:59,814 - segment_embeddings - INFO - Starting path: /home/ubuntu/code/drew/e2e_sam2
2025-04-30 18:48:59,951 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 18:48:59,974 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 18:48:59,974 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 18:48:59,974 - segment_embeddings - INFO - CUDA Memory Allocated: 0.00 MB
2025-04-30 18:48:59,975 - segment_embeddings - INFO - CUDA Memory Reserved: 0.00 MB
2025-04-30 18:48:59,975 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 18:48:59,975 - segment_embeddings - DEBUG - Loading SAM2 model configuration from config file
2025-04-30 18:48:59,975 - segment_embeddings - DEBUG - Building SAM2 model with config: configs/sam2.1/sam2.1_hiera_l.yaml, checkpoint: checkpoints/sam2.1_hiera_large.pt, device: cuda
2025-04-30 18:49:02,468 - segment_embeddings - DEBUG - SAM2 model built successfully
2025-04-30 18:49:02,468 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 18:49:02,468 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 18:49:02,468 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 18:49:02,468 - segment_embeddings - INFO - CUDA Memory Allocated: 1000.91 MB
2025-04-30 18:49:02,469 - segment_embeddings - INFO - CUDA Memory Reserved: 1052.00 MB
2025-04-30 18:49:02,469 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 18:49:02,469 - segment_embeddings - DEBUG - CUDA Memory Allocated: 1000.91 MB
2025-04-30 18:49:02,469 - segment_embeddings - DEBUG - CUDA Memory Reserved: 1052.00 MB
2025-04-30 18:49:02,605 - segment_embeddings - DEBUG - After GC - CUDA Memory Allocated: 1000.91 MB
2025-04-30 18:49:02,605 - segment_embeddings - INFO - SAM2 model built successfully in 2.79 seconds
2025-04-30 18:49:02,605 - segment_embeddings - DEBUG - SAM2 model type: <class 'sam2.modeling.sam2_base.SAM2Base'>
2025-04-30 18:49:02,605 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 18:49:02,605 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 18:49:02,605 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 18:49:02,605 - segment_embeddings - INFO - CUDA Memory Allocated: 1000.91 MB
2025-04-30 18:49:02,605 - segment_embeddings - INFO - CUDA Memory Reserved: 1052.00 MB
2025-04-30 18:49:02,605 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 18:49:02,605 - segment_embeddings - INFO - Creating automatic mask generator for cuda...
2025-04-30 18:49:02,605 - segment_embeddings - INFO - Using CUDA-specific settings for mask generator
2025-04-30 18:49:02,605 - segment_embeddings - DEBUG - Parameters: points_per_side=32, pred_iou_thresh=0.86, stability_score_thresh=0.92
2025-04-30 18:49:02,744 - segment_embeddings - DEBUG - Mask generator created successfully: <class 'sam2.automatic_mask_generator.SAM2AutomaticMaskGenerator'>
2025-04-30 18:49:02,744 - segment_embeddings - INFO - Skipping embedding generator initialization as requested
2025-04-30 18:49:02,744 - segment_embeddings - INFO - Loading image from data/mjolnir_gt.jpeg
2025-04-30 18:49:02,745 - segment_embeddings - DEBUG - Image file size: 5.97 KB
2025-04-30 18:49:02,745 - segment_embeddings - INFO - Image loaded successfully: (316, 160, 3), dtype: uint8
2025-04-30 18:49:02,745 - segment_embeddings - DEBUG - Converting image from BGR to RGB
2025-04-30 18:49:02,745 - segment_embeddings - DEBUG - Image pixel range - Min: 0, Max: 255, Mean: 215.79
2025-04-30 18:49:02,746 - segment_embeddings - INFO - Generating masks...
2025-04-30 18:49:02,746 - segment_embeddings - INFO - Generating masks on cuda device...
2025-04-30 18:49:02,746 - segment_embeddings - DEBUG - Image type: <class 'numpy.ndarray'>, Shape: (316, 160, 3), dtype: uint8
2025-04-30 18:49:02,746 - segment_embeddings - DEBUG - Image is numpy array, Min: 0, Max: 255, Mean: 215.79
2025-04-30 18:49:02,746 - segment_embeddings - DEBUG - Attempting standard mask generation approach
2025-04-30 18:49:02,746 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:49:02,827 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:49:03,494 - root - INFO - Image embeddings computed.
2025-04-30 18:49:07,123 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:49:07,148 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:49:07,170 - root - INFO - Image embeddings computed.
2025-04-30 18:49:08,581 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:49:08,587 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:49:08,609 - root - INFO - Image embeddings computed.
2025-04-30 18:49:10,019 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:49:10,025 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:49:10,047 - root - INFO - Image embeddings computed.
2025-04-30 18:49:11,458 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 18:49:11,464 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 18:49:11,486 - root - INFO - Image embeddings computed.
2025-04-30 18:49:12,895 - segment_embeddings - WARNING - IndexError in mask generation: too many indices for tensor of dimension 1
2025-04-30 18:49:12,896 - segment_embeddings - DEBUG - Error details: Traceback (most recent call last):
  File "/home/ubuntu/code/drew/e2e_sam2/e2e_pipeline_v2/experiments/segment_gemini_outputs.py", line 191, in safe_generate_masks
    masks = mask_generator.generate(image)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 196, in generate
    mask_data = self._generate_masks(image)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 239, in _generate_masks
    scores = 1 / box_area(data["crop_boxes"])
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torchvision/ops/boxes.py", line 251, in box_area
    return (boxes[:, 2] - boxes[:, 0]) * (boxes[:, 3] - boxes[:, 1])
            ~~~~~^^^^^^
IndexError: too many indices for tensor of dimension 1

2025-04-30 18:49:12,897 - segment_embeddings - WARNING - Dimension error in mask generation: too many indices for tensor of dimension 1
2025-04-30 18:49:12,897 - segment_embeddings - INFO - Trying fallback approach...
2025-04-30 18:49:12,897 - segment_embeddings - DEBUG - Converting numpy array to tensor. Original shape: (316, 160, 3)
2025-04-30 18:49:12,897 - segment_embeddings - DEBUG - Image is in HWC format, converting to BCHW
2025-04-30 18:49:12,897 - segment_embeddings - DEBUG - Created tensor with shape: torch.Size([1, 3, 316, 160]), dtype: torch.uint8
2025-04-30 18:49:12,897 - segment_embeddings - DEBUG - Moved tensor to cuda
2025-04-30 18:49:12,897 - segment_embeddings - DEBUG - Tensor device: cuda:0, requires_grad: False
2025-04-30 18:49:12,897 - segment_embeddings - DEBUG - Attempting mask generation with tensor
2025-04-30 18:49:12,897 - segment_embeddings - ERROR - Fallback approach failed: Image format not supported
2025-04-30 18:49:12,898 - segment_embeddings - DEBUG - Fallback error details: Traceback (most recent call last):
  File "/home/ubuntu/code/drew/e2e_sam2/e2e_pipeline_v2/experiments/segment_gemini_outputs.py", line 191, in safe_generate_masks
    masks = mask_generator.generate(image)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 196, in generate
    mask_data = self._generate_masks(image)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 239, in _generate_masks
    scores = 1 / box_area(data["crop_boxes"])
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torchvision/ops/boxes.py", line 251, in box_area
    return (boxes[:, 2] - boxes[:, 0]) * (boxes[:, 3] - boxes[:, 1])
            ~~~~~^^^^^^
IndexError: too many indices for tensor of dimension 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ubuntu/code/drew/e2e_sam2/e2e_pipeline_v2/experiments/segment_gemini_outputs.py", line 228, in safe_generate_masks
    masks = mask_generator.generate(image_tensor)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 196, in generate
    mask_data = self._generate_masks(image)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 233, in _generate_masks
    crop_data = self._process_crop(image, crop_box, layer_idx, orig_size)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/automatic_mask_generator.py", line 262, in _process_crop
    self.predictor.set_image(cropped_im)
  File "/home/ubuntu/code/drew/e2e_sam2/venv/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/ubuntu/code/drew/sam2/sam2/sam2_image_predictor.py", line 108, in set_image
    raise NotImplementedError("Image format not supported")
NotImplementedError: Image format not supported

2025-04-30 18:49:12,898 - segment_embeddings - ERROR - Failed to generate masks: Fallback approach failed: Image format not supported
2025-04-30 19:08:13,472 - segment_embeddings - INFO - Starting segment_gemini_outputs.py
2025-04-30 19:08:13,473 - segment_embeddings - INFO - Arguments: image=data/mjolnir_gt.jpeg, output=segmentation_results, max_segments=2, models=both
2025-04-30 19:08:13,473 - segment_embeddings - INFO - Created output directories in segmentation_results
2025-04-30 19:08:13,473 - segment_embeddings - INFO - Building SAM2 model...
2025-04-30 19:08:13,473 - segment_embeddings - INFO - Starting path: /home/ubuntu/code/drew/e2e_sam2
2025-04-30 19:08:13,611 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 19:08:13,634 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 19:08:13,635 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 19:08:13,635 - segment_embeddings - INFO - CUDA Memory Allocated: 0.00 MB
2025-04-30 19:08:13,635 - segment_embeddings - INFO - CUDA Memory Reserved: 0.00 MB
2025-04-30 19:08:13,635 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 19:08:13,635 - segment_embeddings - DEBUG - Loading SAM2 model configuration from config file
2025-04-30 19:08:13,636 - segment_embeddings - DEBUG - Building SAM2 model with config: configs/sam2.1/sam2.1_hiera_l.yaml, checkpoint: checkpoints/sam2.1_hiera_large.pt, device: cuda
2025-04-30 19:08:16,162 - segment_embeddings - DEBUG - SAM2 model built successfully
2025-04-30 19:08:16,162 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 19:08:16,162 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 19:08:16,162 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 19:08:16,162 - segment_embeddings - INFO - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:08:16,163 - segment_embeddings - INFO - CUDA Memory Reserved: 1052.00 MB
2025-04-30 19:08:16,163 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 19:08:16,163 - segment_embeddings - DEBUG - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:08:16,163 - segment_embeddings - DEBUG - CUDA Memory Reserved: 1052.00 MB
2025-04-30 19:08:16,313 - segment_embeddings - DEBUG - After GC - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:08:16,313 - segment_embeddings - INFO - SAM2 model built successfully in 2.84 seconds
2025-04-30 19:08:16,313 - segment_embeddings - DEBUG - SAM2 model type: <class 'sam2.modeling.sam2_base.SAM2Base'>
2025-04-30 19:08:16,313 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 19:08:16,313 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 19:08:16,314 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 19:08:16,314 - segment_embeddings - INFO - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:08:16,314 - segment_embeddings - INFO - CUDA Memory Reserved: 1052.00 MB
2025-04-30 19:08:16,314 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 19:08:16,314 - segment_embeddings - INFO - Creating automatic mask generator for cuda...
2025-04-30 19:08:16,314 - segment_embeddings - INFO - Using CUDA-specific settings for mask generator
2025-04-30 19:08:16,314 - segment_embeddings - DEBUG - Parameters: points_per_side=32, pred_iou_thresh=0.86, stability_score_thresh=0.92
2025-04-30 19:08:16,458 - segment_embeddings - DEBUG - Mask generator created successfully: <class 'sam2.automatic_mask_generator.SAM2AutomaticMaskGenerator'>
2025-04-30 19:08:16,458 - segment_embeddings - INFO - Skipping embedding generator initialization as requested
2025-04-30 19:08:16,458 - segment_embeddings - INFO - Loading image from data/mjolnir_gt.jpeg
2025-04-30 19:08:16,459 - segment_embeddings - DEBUG - Image file size: 5.97 KB
2025-04-30 19:08:16,459 - segment_embeddings - INFO - Image loaded successfully: (316, 160, 3), dtype: uint8
2025-04-30 19:08:16,459 - segment_embeddings - DEBUG - Converting image from BGR to RGB
2025-04-30 19:08:16,459 - segment_embeddings - DEBUG - Image pixel range - Min: 0, Max: 255, Mean: 215.79
2025-04-30 19:08:16,459 - segment_embeddings - INFO - Generating masks...
2025-04-30 19:08:16,460 - segment_embeddings - INFO - Generating masks on cuda device...
2025-04-30 19:08:16,460 - segment_embeddings - DEBUG - Image type: <class 'numpy.ndarray'>, Shape: (316, 160, 3), dtype: uint8
2025-04-30 19:08:16,460 - segment_embeddings - DEBUG - Image is numpy array, Min: 0, Max: 255, Mean: 215.79
2025-04-30 19:08:16,460 - segment_embeddings - DEBUG - Attempting standard mask generation approach
2025-04-30 19:08:16,460 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 19:08:16,541 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 19:08:17,230 - root - INFO - Image embeddings computed.
2025-04-30 19:08:20,880 - segment_embeddings - DEBUG - Standard approach successful, generated 0 masks
2025-04-30 19:08:20,880 - segment_embeddings - ERROR - No masks were generated
2025-04-30 19:09:25,761 - segment_embeddings - INFO - Starting segment_gemini_outputs.py
2025-04-30 19:09:25,763 - segment_embeddings - INFO - Arguments: image=data/mjolnir_gt.jpeg, output=segmentation_results, max_segments=3, models=both
2025-04-30 19:09:25,764 - segment_embeddings - INFO - Created output directories in segmentation_results
2025-04-30 19:09:25,764 - segment_embeddings - INFO - Building SAM2 model...
2025-04-30 19:09:25,764 - segment_embeddings - INFO - Starting path: /home/ubuntu/code/drew/e2e_sam2
2025-04-30 19:09:25,901 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 19:09:25,925 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 19:09:25,925 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 19:09:25,926 - segment_embeddings - INFO - CUDA Memory Allocated: 0.00 MB
2025-04-30 19:09:25,926 - segment_embeddings - INFO - CUDA Memory Reserved: 0.00 MB
2025-04-30 19:09:25,926 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 19:09:25,926 - segment_embeddings - DEBUG - Loading SAM2 model configuration from config file
2025-04-30 19:09:25,926 - segment_embeddings - DEBUG - Building SAM2 model with config: configs/sam2.1/sam2.1_hiera_l.yaml, checkpoint: checkpoints/sam2.1_hiera_large.pt, device: cuda
2025-04-30 19:09:28,440 - segment_embeddings - DEBUG - SAM2 model built successfully
2025-04-30 19:09:28,440 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 19:09:28,441 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 19:09:28,441 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 19:09:28,441 - segment_embeddings - INFO - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:09:28,441 - segment_embeddings - INFO - CUDA Memory Reserved: 1052.00 MB
2025-04-30 19:09:28,441 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 19:09:28,441 - segment_embeddings - DEBUG - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:09:28,441 - segment_embeddings - DEBUG - CUDA Memory Reserved: 1052.00 MB
2025-04-30 19:09:28,584 - segment_embeddings - DEBUG - After GC - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:09:28,584 - segment_embeddings - INFO - SAM2 model built successfully in 2.82 seconds
2025-04-30 19:09:28,584 - segment_embeddings - DEBUG - SAM2 model type: <class 'sam2.modeling.sam2_base.SAM2Base'>
2025-04-30 19:09:28,584 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 19:09:28,584 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 19:09:28,584 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 19:09:28,584 - segment_embeddings - INFO - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:09:28,585 - segment_embeddings - INFO - CUDA Memory Reserved: 1052.00 MB
2025-04-30 19:09:28,585 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 19:09:28,585 - segment_embeddings - INFO - Creating automatic mask generator for cuda...
2025-04-30 19:09:28,585 - segment_embeddings - INFO - Using CUDA-specific settings for mask generator
2025-04-30 19:09:28,585 - segment_embeddings - DEBUG - Parameters: points_per_side=32, pred_iou_thresh=0.86, stability_score_thresh=0.92
2025-04-30 19:09:28,724 - segment_embeddings - DEBUG - Mask generator created successfully: <class 'sam2.automatic_mask_generator.SAM2AutomaticMaskGenerator'>
2025-04-30 19:09:28,724 - segment_embeddings - INFO - Skipping embedding generator initialization as requested
2025-04-30 19:09:28,724 - segment_embeddings - INFO - Loading image from data/mjolnir_gt.jpeg
2025-04-30 19:09:28,725 - segment_embeddings - DEBUG - Image file size: 5.97 KB
2025-04-30 19:09:28,725 - segment_embeddings - INFO - Image loaded successfully: (316, 160, 3), dtype: uint8
2025-04-30 19:09:28,725 - segment_embeddings - DEBUG - Converting image from BGR to RGB
2025-04-30 19:09:28,726 - segment_embeddings - DEBUG - Image pixel range - Min: 0, Max: 255, Mean: 215.79
2025-04-30 19:09:28,726 - segment_embeddings - INFO - Generating masks...
2025-04-30 19:09:28,726 - segment_embeddings - INFO - Generating masks on cuda device...
2025-04-30 19:09:28,726 - segment_embeddings - DEBUG - Image type: <class 'numpy.ndarray'>, Shape: (316, 160, 3), dtype: uint8
2025-04-30 19:09:28,726 - segment_embeddings - DEBUG - Image is numpy array, Min: 0, Max: 255, Mean: 215.79
2025-04-30 19:09:28,726 - segment_embeddings - DEBUG - Attempting standard mask generation approach
2025-04-30 19:09:28,726 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 19:09:28,806 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 19:09:29,491 - root - INFO - Image embeddings computed.
2025-04-30 19:09:33,135 - segment_embeddings - DEBUG - Standard approach successful, generated 0 masks
2025-04-30 19:09:33,135 - segment_embeddings - ERROR - No masks were generated
2025-04-30 19:30:10,155 - segment_embeddings - INFO - Starting segment_gemini_outputs.py
2025-04-30 19:30:10,156 - segment_embeddings - INFO - Arguments: image=data/mjolnir_gt.jpeg, output=segmentation_results, max_segments=3, models=both
2025-04-30 19:30:10,156 - segment_embeddings - INFO - Created output directories in segmentation_results
2025-04-30 19:30:10,156 - segment_embeddings - INFO - Building SAM2 model...
2025-04-30 19:30:10,156 - segment_embeddings - INFO - Starting path: /home/ubuntu/code/drew/e2e_sam2
2025-04-30 19:30:10,296 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 19:30:10,320 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 19:30:10,320 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 19:30:10,320 - segment_embeddings - INFO - CUDA Memory Allocated: 0.00 MB
2025-04-30 19:30:10,320 - segment_embeddings - INFO - CUDA Memory Reserved: 0.00 MB
2025-04-30 19:30:10,320 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 19:30:10,320 - segment_embeddings - DEBUG - Loading SAM2 model configuration from config file
2025-04-30 19:30:10,321 - segment_embeddings - DEBUG - Building SAM2 model with config: configs/sam2.1/sam2.1_hiera_l.yaml, checkpoint: checkpoints/sam2.1_hiera_large.pt, device: cuda
2025-04-30 19:30:12,839 - segment_embeddings - DEBUG - SAM2 model built successfully
2025-04-30 19:30:12,839 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 19:30:12,839 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 19:30:12,839 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 19:30:12,839 - segment_embeddings - INFO - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:30:12,840 - segment_embeddings - INFO - CUDA Memory Reserved: 1052.00 MB
2025-04-30 19:30:12,840 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 19:30:12,840 - segment_embeddings - DEBUG - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:30:12,840 - segment_embeddings - DEBUG - CUDA Memory Reserved: 1052.00 MB
2025-04-30 19:30:12,982 - segment_embeddings - DEBUG - After GC - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:30:12,982 - segment_embeddings - INFO - SAM2 model built successfully in 2.83 seconds
2025-04-30 19:30:12,982 - segment_embeddings - DEBUG - SAM2 model type: <class 'sam2.modeling.sam2_base.SAM2Base'>
2025-04-30 19:30:12,982 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 19:30:12,982 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 19:30:12,982 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 19:30:12,983 - segment_embeddings - INFO - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:30:12,983 - segment_embeddings - INFO - CUDA Memory Reserved: 1052.00 MB
2025-04-30 19:30:12,983 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 19:30:12,983 - segment_embeddings - INFO - Creating automatic mask generator for cuda...
2025-04-30 19:30:12,983 - segment_embeddings - INFO - Using CUDA-specific settings for mask generator
2025-04-30 19:30:12,983 - segment_embeddings - DEBUG - Parameters: points_per_side=32, pred_iou_thresh=0.86, stability_score_thresh=0.92
2025-04-30 19:30:13,121 - segment_embeddings - DEBUG - Mask generator created successfully: <class 'sam2.automatic_mask_generator.SAM2AutomaticMaskGenerator'>
2025-04-30 19:30:13,122 - segment_embeddings - INFO - Skipping embedding generator initialization as requested
2025-04-30 19:30:13,122 - segment_embeddings - INFO - Loading image from data/mjolnir_gt.jpeg
2025-04-30 19:30:13,122 - segment_embeddings - DEBUG - Image file size: 5.97 KB
2025-04-30 19:30:13,122 - segment_embeddings - INFO - Image loaded successfully: (316, 160, 3), dtype: uint8
2025-04-30 19:30:13,122 - segment_embeddings - DEBUG - Converting image from BGR to RGB
2025-04-30 19:30:13,123 - segment_embeddings - DEBUG - Image pixel range - Min: 0, Max: 255, Mean: 215.79
2025-04-30 19:30:13,123 - segment_embeddings - INFO - Generating masks...
2025-04-30 19:30:13,123 - segment_embeddings - INFO - Generating masks on cuda device...
2025-04-30 19:30:13,123 - segment_embeddings - DEBUG - Image type: <class 'numpy.ndarray'>, Shape: (316, 160, 3), dtype: uint8
2025-04-30 19:30:13,123 - segment_embeddings - DEBUG - Image is numpy array, Min: 0, Max: 255, Mean: 215.79
2025-04-30 19:30:13,123 - segment_embeddings - DEBUG - Attempting standard mask generation approach
2025-04-30 19:30:13,124 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 19:30:13,203 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 19:30:13,907 - root - INFO - Image embeddings computed.
2025-04-30 19:30:17,544 - segment_embeddings - DEBUG - Standard approach successful, generated 0 masks
2025-04-30 19:30:17,544 - segment_embeddings - ERROR - No masks were generated
2025-04-30 19:31:19,561 - segment_embeddings - INFO - Starting segment_gemini_outputs.py
2025-04-30 19:31:19,562 - segment_embeddings - INFO - Arguments: image=data/cars.jpg, output=segmentation_results, max_segments=3, models=both
2025-04-30 19:31:19,562 - segment_embeddings - INFO - Created output directories in segmentation_results
2025-04-30 19:31:19,562 - segment_embeddings - INFO - Building SAM2 model...
2025-04-30 19:31:19,562 - segment_embeddings - INFO - Starting path: /home/ubuntu/code/drew/e2e_sam2
2025-04-30 19:31:19,699 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 19:31:19,723 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 19:31:19,723 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 19:31:19,723 - segment_embeddings - INFO - CUDA Memory Allocated: 0.00 MB
2025-04-30 19:31:19,723 - segment_embeddings - INFO - CUDA Memory Reserved: 0.00 MB
2025-04-30 19:31:19,724 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 19:31:19,724 - segment_embeddings - DEBUG - Loading SAM2 model configuration from config file
2025-04-30 19:31:19,724 - segment_embeddings - DEBUG - Building SAM2 model with config: configs/sam2.1/sam2.1_hiera_l.yaml, checkpoint: checkpoints/sam2.1_hiera_large.pt, device: cuda
2025-04-30 19:31:22,232 - segment_embeddings - DEBUG - SAM2 model built successfully
2025-04-30 19:31:22,232 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 19:31:22,232 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 19:31:22,232 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 19:31:22,233 - segment_embeddings - INFO - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:31:22,233 - segment_embeddings - INFO - CUDA Memory Reserved: 1052.00 MB
2025-04-30 19:31:22,233 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 19:31:22,233 - segment_embeddings - DEBUG - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:31:22,233 - segment_embeddings - DEBUG - CUDA Memory Reserved: 1052.00 MB
2025-04-30 19:31:22,385 - segment_embeddings - DEBUG - After GC - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:31:22,385 - segment_embeddings - INFO - SAM2 model built successfully in 2.82 seconds
2025-04-30 19:31:22,386 - segment_embeddings - DEBUG - SAM2 model type: <class 'sam2.modeling.sam2_base.SAM2Base'>
2025-04-30 19:31:22,386 - segment_embeddings - INFO - Using CUDA GPU for computation
2025-04-30 19:31:22,386 - segment_embeddings - INFO - CUDA Device ID: 0
2025-04-30 19:31:22,386 - segment_embeddings - INFO - CUDA Device Name: Tesla T4
2025-04-30 19:31:22,386 - segment_embeddings - INFO - CUDA Memory Allocated: 1000.91 MB
2025-04-30 19:31:22,386 - segment_embeddings - INFO - CUDA Memory Reserved: 1052.00 MB
2025-04-30 19:31:22,386 - segment_embeddings - INFO - Selected device: cuda
2025-04-30 19:31:22,386 - segment_embeddings - INFO - Creating automatic mask generator for cuda...
2025-04-30 19:31:22,386 - segment_embeddings - INFO - Using CUDA-specific settings for mask generator
2025-04-30 19:31:22,386 - segment_embeddings - DEBUG - Parameters: points_per_side=32, pred_iou_thresh=0.86, stability_score_thresh=0.92
2025-04-30 19:31:22,531 - segment_embeddings - DEBUG - Mask generator created successfully: <class 'sam2.automatic_mask_generator.SAM2AutomaticMaskGenerator'>
2025-04-30 19:31:22,531 - segment_embeddings - INFO - Skipping embedding generator initialization as requested
2025-04-30 19:31:22,531 - segment_embeddings - INFO - Loading image from data/cars.jpg
2025-04-30 19:31:22,560 - segment_embeddings - DEBUG - Image file size: 1033.39 KB
2025-04-30 19:31:22,561 - segment_embeddings - INFO - Image loaded successfully: (1500, 2250, 3), dtype: uint8
2025-04-30 19:31:22,561 - segment_embeddings - DEBUG - Converting image from BGR to RGB
2025-04-30 19:31:22,571 - segment_embeddings - DEBUG - Image pixel range - Min: 0, Max: 255, Mean: 66.98
2025-04-30 19:31:22,571 - segment_embeddings - INFO - Generating masks...
2025-04-30 19:31:22,571 - segment_embeddings - INFO - Generating masks on cuda device...
2025-04-30 19:31:22,571 - segment_embeddings - DEBUG - Image type: <class 'numpy.ndarray'>, Shape: (1500, 2250, 3), dtype: uint8
2025-04-30 19:31:22,579 - segment_embeddings - DEBUG - Image is numpy array, Min: 0, Max: 255, Mean: 66.98
2025-04-30 19:31:22,579 - segment_embeddings - DEBUG - Attempting standard mask generation approach
2025-04-30 19:31:22,579 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-04-30 19:31:22,687 - root - INFO - Computing image embeddings for the provided image...
2025-04-30 19:31:23,414 - root - INFO - Image embeddings computed.
2025-04-30 19:31:27,238 - segment_embeddings - DEBUG - Standard approach successful, generated 0 masks
2025-04-30 19:31:27,238 - segment_embeddings - ERROR - No masks were generated
